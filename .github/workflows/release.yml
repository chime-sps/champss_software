name: Release

on:
  workflow_call:
    inputs:
      ref_name:
        type: string
      event_name:
        type: string
      event_repository:
        type: string
    outputs:
      release_created:
        value: ${{ jobs.create-release-pull-request.outputs.release_created }}
      release_tag: 
        value: ${{ jobs.create-release-pull-request.outputs.release_tag }}
        

jobs:
  create-release-pull-request:
    runs-on: ubuntu-latest
    if: ${{ inputs.event_name == 'push' && inputs.ref_name == 'main' }}
    outputs:
      release_created: ${{ steps.set-release.outputs.release_created }}
      release_tag: ${{ steps.set-release.outputs.tag_name }}
    # If merging development branch to main, this will create another PR of the official release
    # If merging that automated release PR to main, it will output release_created as true
    # and release_tag as the new version number, to be used in other workflows if needed
    steps:
      - id: set-release
        # Note: will only create automated release PR if the sqaush commit message
        # of the merge contains a "fix" or "feat" Commitzen message
        uses: google-github-actions/release-please-action@v4
        with:
          release-type: python
          repo-url: chime-sps/${{ inputs.event_repository }}
          path: "."
