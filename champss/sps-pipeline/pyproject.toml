[tool.poetry]
name = "sps-pipeline"
version = "1.5.2"
description = "CHIME SPS Pipeline"
authors = ["CHIME SPS <chime_spawg@physics.mcgill.>"]
license = "GPLv3"
readme = "README.md"
exclude = [
    "tests"
]

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
beamformer = {path = "../beamformer", develop=true}
candidate-processor = {path = "../candidate-processor", develop=true}
workflow-core = {git = "https://github.com/CHIMEFRB/workflow.git"}
folding = {path = "../folding", develop=true}
ps-processes = {path = "../ps-processes", develop=true}
rfi-mitigation = {path = "../rfi-mitigation", develop=true}
scheduler = {path = "../scheduler", develop=true}
spshuff = {path = "../spshuff", develop=true}
sps-common = {path = "../sps-common", develop=true}
sps-databases = {path = "../sps-databases", develop=true}
sps-dedispersion = {path = "../sps-dedispersion", develop=true}
sps-multi-pointing = {path = "../multi-pointing", develop=true}
astropy = "~6.1"
click = "^8.1.4"
docker = "^6.1.3"
omegaconf = "^2.3.0"
prometheus-client = "^0.17.1"
prometheus-api-client = "^0.5.4"
pytz = "^2023.3"
pyyaml = "^6.0"
pyroscope-io = "^0.8.5"
requests = "<2.32.0"

[tool.poetry.group.dev.dependencies]
commitizen = "^3.4.0"
mypy = "^1.4.0"
pre-commit = "^3.3.3"
pytest = "^7.3.2"

[tool.poetry.scripts]
run-pipeline = "sps_pipeline.pipeline:main"
pointing-with-data = "sps_pipeline.pipeline:find_pointing_with_data"
run-stack-search-pipeline = "sps_pipeline.pipeline:stack_and_search"
find-all-pipeline-processes = "sps_pipeline.processing:find_all_pipeline_processes"
run-all-pipeline-processes = "sps_pipeline.processing:run_all_pipeline_processes"
find-all-folding-processes = "sps_pipeline.processing:find_all_folding_processes"
run-all-folding-processes = "sps_pipeline.processing:run_all_folding_processes"
start-processing-services = "sps_pipeline.processing:start_processing_services"
start-processing-manager = "sps_pipeline.processing:start_processing_manager"
start-processing-cleanup = "sps_pipeline.processing:start_processing_cleanup"
find-monthly-search-commands = "sps_pipeline.stack_scheduling:find_monthly_search_commands"
execute-monthly-search-commands = "sps_pipeline.stack_scheduling:execute_monthly_search_commands"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
